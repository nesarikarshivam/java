package programs;

	import java.util.*;
	
	public class CallerD 
	{
			Date date = new Date();
			String name;
			Integer telNo;
			
		
			CallerD(Date d, String n,Integer t)
			{
				date =d;
				name = n;
				telNo = t;
			}
	}


package programs;

import java.util.*;
import java.util.Map.Entry;
public class DatabaseCallers 
{
	
	public static HashMap<Long,String> hm;
	
	public static Scanner sc = new Scanner(System.in);
	static void createEnteries(int n)
	{ 
	
		hm = new HashMap<Long,String>();
		for(int i=0;i<n;i++)
		{
			
			System.out.println("Enter the phone number and Contact name");
			Long phno = sc.nextLong();
			String name = sc.next();
	
			hm.put(phno, name);		
		}
	}
	public static void ForHoldingData() 
	{
		
     System.out.println("Enter how many details do you require?");
     int n = sc.nextInt();
     createEnteries(n);
	}
	public static void display()
	{
	
		Set<Entry<Long,String>> hashSet=hm.entrySet();
        for(Entry<Long,String> entry:hashSet ) 
        {
            System.out.println("Key="+entry.getKey()+", Value="+entry.getValue());
        }
	}

}


package programs;

import java.util.*;

public class MissedCalledDetails 
{
	//Details of missed call (Calendar, telephone no, name)
	Calendar calObj;
	Long tel_num;
	String name;
	//Constructor for initialization
	MissedCalledDetails(Calendar cob, Long tn, String n)
	{
		calObj = cob;
		tel_num = tn;
		name = n;
	}
	//Display function 
	void display()
	{ 
		//Add date to the Calendar..It gets incremented by 1 day
		calObj.add(Calendar.DATE, 1);
	    //SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
		System.out.println("Current Time is  "+calObj.getTime());
		System.out.println("Telephone number is  "+tel_num);
		System.out.println("Name is  "+name);
	}

}

package programs;

import java.util.*;

public class RecordManageMissedCall 
{
	
	static LinkedList<MissedCalledDetails> amiss;
	static void HandleMissedCallActivities()
	{
		
		amiss = new LinkedList<MissedCalledDetails>();
		while(true)
		{
		
			System.out.println("Enter a choice");
			System.out.println("1: add missed call \n 2.Display and delete on request \n 3. Delete based on number \n 4. Print");
		
			int choice = DatabaseCallers.sc.nextInt();
			
			switch(choice)
			{
			case 1: 
				System.out.println("Enter the missed call telephone number");
				Calendar cb = Calendar.getInstance();
				Long telnum= DatabaseCallers.sc.nextLong();
				String name; 
				if(DatabaseCallers.hm.containsKey(telnum))
					name = DatabaseCallers.hm.get(telnum);
				else
					name = "Private Caller";
				MissedCalledDetails mcd = new MissedCalledDetails(cb,telnum,name);
				
				if(amiss.size()==10)
				{
				
				 amiss.removeLast();
				}
				
				amiss.addFirst(mcd);
				
				break;
			case 2: 
				ListIterator<MissedCalledDetails> it = amiss.listIterator();
				LinkedList<MissedCalledDetails> removeList = new LinkedList<MissedCalledDetails>();
				int i=0;
				while(it.hasNext())
				{ i++;
					System.out.println("Number is ");
					MissedCalledDetails m1 = it.next();
					System.out.println(m1.tel_num);
					System.out.println("Do you want to delete the details related to this number? Indicate by 1 : delete, 2: move next call , 3: display call details \n");
					int cho = DatabaseCallers.sc.nextInt();
					if(cho==1)
						removeList.add(m1);
					else if(cho==3)
					{
						m1.display();
						}
				}
				if(i==0)
					System.out.println("No missed calls");
				amiss.removeAll(removeList);
				
				break;
			case 3: 
				System.out.println("Delete based on the number given by user");
				System.out.println("Enter the number");
				Long num = DatabaseCallers.sc.nextLong();
				ListIterator<MissedCalledDetails> it1 = amiss.listIterator();//Creating an iterator for easy iteration
				boolean flag = false;
				i=0;
				while(it1.hasNext())
				{ i++;
					MissedCalledDetails m1 = it1.next();
					if(m1.tel_num==num)
					{
						flag =true;
						amiss.remove(m1);
						break;
					}
				}
				if(i!=0)
				{
				if(flag==true)
					System.out.println("Phone number with details "+ num +"deleted");
				else
					System.out.println("No such number exists");
				}
				else
					System.out.println("No missed Call");
				break;
			case 4:
			
				ListIterator<MissedCalledDetails> it2 = amiss.listIterator();
				while(it2.hasNext())
				{
					MissedCalledDetails m1 = it2.next();
					m1.display();
				}
				 break;
				
			default: return;	
			}
	}
	}
	
	public static void main(String[] args) 
	{
		
		
		DatabaseCallers.ForHoldingData();
		System.out.println("Receive missed Calls");
		
		HandleMissedCallActivities();
		DatabaseCallers.display();	
	}
}

package programs;

import java.util.*;
public class TelephoneClass 
{
	HashMap<Long,String> hm = new HashMap<Long,String>();
	ArrayList<Long> callList = new ArrayList<Long>();
	ArrayList<CallerD> missedcall = new ArrayList<CallerD>();
	void createCaller()
	{
		hm.put(new Long("9898080099"),"Hari M");
		hm.put(new Long("9898087654"),"Lankesh M");
		hm.put(new Long("9898897843"),"Lucky");
	}
}


